@page "/tipolicores/edit/{TipoLicorId:int}"
@using CurrieTechnologies.Razor.SweetAlert2;
@using System.Net;
@inject IRepository repository
@inject NavigationManager navigationManager
@inject SweetAlertService sweetAlertService
@inject NavigationManager navigationManager

<h3>Editar Tipo de licor</h3>

@if (tipolicor is null)
{
    <p>Cargando...</p>
}
else
{
    <TipoLicorForm @ref="tipolicorForm" TipoLicor="tipolicor" OnValidSubmit="EditAsync" ReturnAction="Return" />
}

@code {
    private TipoLicor? tipolicor;
    private TipoLicorForm? tipolicorForm;

    [Parameter]
    public int TipoLicorId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var responseHttp = await repository.Get<TipoLicor>($"/api/tipolicores/{TipoLicorId}");
        if (responseHttp.Error)
        {
            if (responseHttp.HttpResponseMessage.StatusCode == HttpStatusCode.NotFound)
            {
                navigationManager.NavigateTo("/sedes");
                return;
            }

            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        tipolicor = responseHttp.Response;
    }

    private async Task EditAsync()
    {
        var responseHttp = await repository.Put("/api/tipolicores", tipolicor);
        if (responseHttp.Error)
        {
            var message = await responseHttp.GetErrorMessageAsync();
            await sweetAlertService.FireAsync("Error", message, SweetAlertIcon.Error);
            return;
        }

        Return();
    }

    private void Return()
    {
        tipolicorForm!.FormPostedSuccessfully = true;
        navigationManager.NavigateTo($"/sedes/details/{tipolicor!.SedeId}");
    }
}
